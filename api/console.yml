openapi: 3.0.3
info:
  version: 1.0.0
  title: Gizzwork/console - OpenAPI 3.0
  description: 社員情報管理API
servers:
  - url: http://localhosot:8001/api/v1
tags:
  - name: User
    description: Everything about your Pets
paths:
  /users:
    get:
      tags:
        - User
      summary: List all Users
      operationId: listUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                  required:
                    - user_id
                    - email
                    - name
      security:
        - api_key: []
    post:
      tags:
        - User
      summary: Create a new user
      operationId: createUser
      requestBody:
        description: User object that needs to be added to the store
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
              required:
                - email
                - password
                - name
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
                required:
                  - user_id
      security:
        - api_key: []
  /users/{userId}:
    get:
      tags:
        - User
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
                required:
                  - user_id
                  - email
                  - name
        '404':
          description: User not found
      security:
        - api_key: []
    put:
      tags:
        - User
      summary: Update an existing user
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/userId'
      requestBody:
        description: User object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: User updated
        '404':
          description: User not found
      security:
        - api_key: []
    delete:
      tags:
        - User
      summary: Delete an user
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
      security:
        - api_key: []
components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
  parameters:
    userId:
      name: userId
      in: path
      description: ID of user to return
      required: true
      schema:
        type: string
        format: uuid
  requestBodies:
    User:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              name:
                type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-KEY
      in: header

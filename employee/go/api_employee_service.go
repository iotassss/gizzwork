/*
 * Swagger Petstore - OpenAPI 3.0
 *
 * 社員情報管理API
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"context"
	"errors"
	"net/http"
)

// EmployeeAPIService is a service that implements the logic for the EmployeeAPIServicer
// This service should implement the business logic for every endpoint for the EmployeeAPI API.
// Include any external packages or services that will be required by this service.
type EmployeeAPIService struct {
}

// NewEmployeeAPIService creates a default api service
func NewEmployeeAPIService() EmployeeAPIServicer {
	return &EmployeeAPIService{}
}

// CreateEmployee - Create a new employee
func (s *EmployeeAPIService) CreateEmployee(ctx context.Context, employee Employee) (ImplResponse, error) {
	// TODO - update CreateEmployee with the required logic for this service method.
	// Add api_employee_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Employee{}) or use other options such as http.Ok ...
	// return Response(201, Employee{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateEmployee method not implemented")
}

// DeleteEmployee - Delete an employee
func (s *EmployeeAPIService) DeleteEmployee(ctx context.Context, employeeId string) (ImplResponse, error) {
	// TODO - update DeleteEmployee with the required logic for this service method.
	// Add api_employee_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteEmployee method not implemented")
}

// GetEmployeeById - Find employee by ID
func (s *EmployeeAPIService) GetEmployeeById(ctx context.Context, employeeId string) (ImplResponse, error) {
	// TODO - update GetEmployeeById with the required logic for this service method.
	// Add api_employee_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Employee{}) or use other options such as http.Ok ...
	// return Response(200, Employee{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEmployeeById method not implemented")
}

// ListEmployees - List all employees
func (s *EmployeeAPIService) ListEmployees(ctx context.Context) (ImplResponse, error) {
	// TODO - update ListEmployees with the required logic for this service method.
	// Add api_employee_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Employee{}) or use other options such as http.Ok ...
	// return Response(200, []Employee{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListEmployees method not implemented")
}

// UpdateEmployee - Update an existing employee
func (s *EmployeeAPIService) UpdateEmployee(ctx context.Context, employeeId string, employee Employee) (ImplResponse, error) {
	// TODO - update UpdateEmployee with the required logic for this service method.
	// Add api_employee_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Employee{}) or use other options such as http.Ok ...
	// return Response(200, Employee{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateEmployee method not implemented")
}
